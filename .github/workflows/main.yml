name: Release

on:
  push:
    branches:
      - 'develop'
    tags:
      - '*'

env:
  GITHUB_RUN_ID: ${GITHUB_RUN_ID}
  RELEASE_REVISION: "pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:

    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.4.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Docker Hub
      id: login-hub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Docker cache layers
      uses: actions/cache@v2
      with:
       path: /tmp/.buildx-cache
       key: ${{ runner.os }}-single-buildx-${{ github.sha }}
       restore-keys: |
        ${{ runner.os }}-single-buildx

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Build & Push
      uses: docker/build-push-action@v2
      with:
            context: .
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.extract_branch.outputs.branch }}

    - name: Deploy to Kubernetes
      uses: kodermax/kubectl-aws-eks@master
      env:
          RELEASE_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/2048:latest
      with:
            args: set image deployment/${{ github.event.repository.name }} ${{ github.event.repository.name }}=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.extract_branch.outputs.branch }} --record -n ${{ secrets.KUBE_NAMESPACE }}

    - name: Redeploy pod
      uses: kodermax/kubectl-aws-eks@master
      with: 
            args: rollout restart deployment -n ${{ secrets.KUBE_NAMESPACE }} ${{ github.event.repository.name }}
